#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <math.h>
#include <stdlib.h>
#include <locale.h>
#include <stdio.h>
#include <string.h>
#define SIZE 20

struct nname
{
	char name2[20], bestn[20] ,topn[20];
};

void proc1(struct nname n[20],float table[20][4],float time[20]);
void proc2(struct nname n[20], float table[20][4], float time[20]);
void proc3(struct nname n[20], float table[20][4], float time[20]);
void proc4(struct nname n[20], float table[20][4], float time[20]);

int main()
{
	setlocale(LC_ALL, "RUS");
	system("chcp 1251");
	system("cls");
	FILE* file = fopen("tablica.txt", "r");
	float table[20][4], time[20];
	int count = 100, k = 0;
	char c;
	char name[20];
	count = count / 5;
	struct nname n[20];
	for (int i = 0; i < count; i++)
	{
		fscanf(file, "%s\n", name);
		printf("%s\n", name);
		strcpy(n[i].name2, name);
		fscanf(file, "%f\n", &table[i][k]);
		printf("%5.1f\n", table[i][k]);
		fscanf(file, "%f\n", &table[i][k+1]);
		printf("%5.1f\n", table[i][k+1]);
		fscanf(file, "%f\n", &table[i][k+2]);
		printf("%5.1f\n", table[i][k+2]);
		fscanf(file, "%f\n", &table[i][k+3]);
		printf("%5.1f\n", table[i][k+3]);
		time[i] = table[i][0] + table[i][1] + table[i][2] + table[i][3];
	}
	printf("введите 1 Напечатать в исходную таблицу\nвведите 2 для поиска наилучшего вермени на этапе\nвведите 3 для вывода результатов участника \n");
	scanf("%c", &c);
	switch (c)
	{
	case '1':
		proc1(n, table, time);
		break;
	case '2':
		proc2(n, table, time);
		break;
	case '3':
		proc3(n, table, time);
		break;
	case '4':
		proc4(n, table, time);
		break;
	case '5':
		proc4(n, table, time);
		break;
	case '6':
		proc4(n, table, time);
		break;
	}
}

void proc1(struct nname n[20],float table[20][4],float time[20])
{
	printf("________________________________________________________________________________________________\n");
	printf("|Имя\t\t|       1 этап\t |       2 этап\t |       3 этап\t |       4 этап\t |общее время  |\n");
	for (int i = 0; i < 20; i++)
	{
		printf("|%s    \t|", n[i].name2);
		for (int k = 0; k < 4; k++)
		{
			printf("\t%5.1f c  |", table[i][k]);
		}
			printf("\t%5.1f c|\n", time[i]);
	}
	printf("|______________________________________________________________________________________________|");
}

void proc2(struct nname n[20], float table[20][4], float time[20])
{
	float best = 0,worst=999999;
	int etap,d;
	printf("1-лучший результат 2-худший результат\n");
	scanf("%d", &d);
	if (d == 2)
	{
		puts("введите этап");
		scanf("%d", &etap);
		etap--;
		for (int i = 0; i < 20; i++)
		{
			if (best < table[i][etap])
			{
				best = table[i][etap];
				strcpy(n[0].bestn, n[i].name2);
			}
			else
			{
				best = best;
			}
		}		
		printf("|худший результат на %d этапе| %s | %5.1f с|", etap + 1, n[0].bestn, best);
	}
	if (d==1)
	{
		puts("введите этап");
		scanf("%d", &etap);
		etap--;
		for (int i = 0; i < 20; i++)
		{
			if (worst > table[i][etap])
			{
				worst = table[i][etap];
				strcpy(n[0].bestn, n[i].name2);
			}
			else
			{
				worst = worst;
			}
		}
		printf("|лучший результат на %d этапе| %s | %5.1f с|", etap + 1, n[0].bestn, worst);
	}
}

void proc3(struct nname n[20], float table[20][4], float time[20])
{
	char nmn[20];
	printf("введите имя\n");
	scanf("%s", &nmn);
	for (int i = 0; i < 20; i++)
	{
		if (strcmp(nmn,n[i].name2)==0)
		{
			printf("%s %5.1f %5.1f %5.1f %5.1f %5.1f\n", n[i].name2, table[i][0], table[i][1], table[i][2], table[i][3], time[i]);
		}
	}
}

void proc4(struct nname n[20], float table[20][4], float time[20])
{
	float time2[20],table2[20][4], q;
	int mesto[20];
	memcpy(time2, time, sizeof(time2));
	for (int i = 0; i < 20 - 1; i++)
	{
		for (int j = 0; j < 20 - i - 1; j++)
		{
			if (time2[j] > time2[j + 1])
			{
				q = time2[j];
				time2[j] = time2[j + 1];
				time2[j + 1] = q;
			}
		}
	}
	for (int i = 0; i < 20; i++)
	{
		for (int j = 0; j < 20; j++)
		{
			if (time2[j] == time[i])
			{
				strcpy(n[j].topn, n[i].name2);
				table2[j][0] = table[i][0];
				table2[j][1] = table[i][1];
				table2[j][2] = table[i][2];
				table2[j][3] = table[i][3];
			}
		}
	}
	for (int i = 0; i < 20; i++)
	{
		for (int k = 0; k < 20; k++)
		{
			if (time2[k] == time2[i])
			{
				mesto[i] = i + 1;
				mesto[k] = i + 1;
			}
			else
			{
				mesto[i] = i + 1;
			}
		}
	}
	printf("________________________________________________________________________________________________\n");
	printf("|Имя\t\t|       1 этап\t |       2 этап\t |       3 этап\t |       4 этап\t |общее время  |\n");
	for (int i = 0; i < 20; i++)
	{
		printf("|%s    \t|", n[i].topn);
		for (int k = 0; k < 4; k++)
		{
			printf("\t%5.1f c  |", table2[i][k]);
		}
		printf("\t%5.1f c|", time2[i]);
		printf("\t%d |\n", mesto[i]);
	}
	printf("|______________________________________________________________________________________________|");
}
